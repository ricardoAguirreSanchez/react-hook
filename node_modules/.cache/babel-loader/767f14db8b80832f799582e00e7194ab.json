{"ast":null,"code":"var _jsxFileName = \"/Users/raguirre/Desktop/react-hook/src/components/FormularioSimple.js\";\nimport React from 'react';\nimport { Fragment, useReducer } from 'react';\nimport { useForm } from 'react-hook-form'; //libreria de terceros\n// Hay que definir como es el Reducer*****\n\nconst appReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_LIBRO':\n      return {\n        libros: [...state.libros, action.payload]\n      };\n  }\n};\n\nconst Formulario = () => {\n  // Hay que tener un estado inicial*****\n  const initialState = {\n    libros: [{\n      titulo: 'lolo',\n      descripcion: 'XXXXXX'\n    }, {\n      titulo: 'alagar',\n      descripcion: 'YYYYYY'\n    }]\n  }; // a useReducer se la envia el estado inicial y el reducer configurado*********\n\n  const [state, dispatch] = useReducer(appReducer, //el q escucha los cambios*********\n  initialState);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = (data, e) => {\n    console.log(data);\n    let titulo = data.titulo;\n    let descripcion = data.descripcion;\n    const nuevoLibro = {\n      titulo: data.titulo,\n      descripcion: data.descripcion\n    }; // LLamamos al dispatch para q aplique la accion en base al switch q el conoce*********\n\n    dispatch({\n      type: 'ADD_LIBRO',\n      payload: nuevoLibro\n    });\n    e.target.reset();\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Formulario:\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"titulo\",\n    placeholder: \"Ingrese titulo\",\n    className: \"form-control my-2\",\n    ref: register({\n      required: {\n        value: true,\n        message: 'Titulo obligatorio'\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"text-danger text-small d-block mb-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, errors && errors.titulo && errors.titulo.message), React.createElement(\"input\", {\n    name: \"descripcion\",\n    placeholder: \"Ingrese descripci\\xF3n\",\n    className: \"form-control my-2\",\n    ref: register({\n      required: {\n        value: true,\n        message: 'Descripcion obligatorio'\n      },\n      minLength: {\n        value: 10,\n        message: 'Descripcion debe tener como minimo 10 caracteres'\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"text-danger text-small d-block mb-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, errors && errors.descripcion && errors.descripcion.message), React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Enviar\")), state.libros.map((item, key) => React.createElement(\"div\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, item.titulo, \"-\", item.descripcion)));\n};\n\nexport default Formulario;","map":{"version":3,"sources":["/Users/raguirre/Desktop/react-hook/src/components/FormularioSimple.js"],"names":["React","Fragment","useReducer","useForm","appReducer","state","action","type","libros","payload","Formulario","initialState","titulo","descripcion","dispatch","register","handleSubmit","errors","onSubmit","data","e","console","log","nuevoLibro","target","reset","required","value","message","minLength","map","item","key"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Fragment , useReducer} from 'react';\nimport { useForm } from 'react-hook-form'; //libreria de terceros\n\n// Hay que definir como es el Reducer*****\nconst appReducer = (state,action) => {\n        switch (action.type) {\n            case 'ADD_LIBRO': \n                return ({\n                    libros : [ ...state.libros , action.payload]\n                })\n            \n        }\n}\n\nconst Formulario = () => {\n\n    // Hay que tener un estado inicial*****\n    const initialState = {\n        libros:[\n            {titulo: 'lolo' , descripcion: 'XXXXXX'},\n            {titulo: 'alagar' , descripcion: 'YYYYYY'}\n        ]\n    }\n\n    // a useReducer se la envia el estado inicial y el reducer configurado*********\n    const [state,dispatch] = useReducer(appReducer, //el q escucha los cambios*********\n        initialState)\n\n    const { register, handleSubmit, errors } = useForm(); \n\n    const onSubmit = (data,e) => {\n        console.log(data);\n\n        let titulo = data.titulo;\n        let descripcion = data.descripcion;\n        const nuevoLibro = {\n            titulo: data.titulo,\n            descripcion: data.descripcion\n        }\n    \n        // LLamamos al dispatch para q aplique la accion en base al switch q el conoce*********\n        dispatch({\n            type: 'ADD_LIBRO',\n            payload : nuevoLibro\n        })\n\n        e.target.reset();\n    }\n    return(\n        <Fragment>\n            <h1>Formulario:</h1>\n            <form onSubmit={handleSubmit(onSubmit)}>  \n            {/* Es obligatorio q los input tengan un REF */}\n            <input\n                name=\"titulo\"\n                placeholder=\"Ingrese titulo\"\n                className=\"form-control my-2\"\n                ref={\n                    register({\n                        required: {value: true, message: 'Titulo obligatorio'}\n                    })\n                }\n            />\n            {/* Metodo para devolver mensajes que recomienda la misma libreria */}\n            <span className=\"text-danger text-small d-block mb-2\">\n                {errors && errors.titulo && errors.titulo.message}\n            </span>\n\n            <input\n                name=\"descripcion\"\n                placeholder=\"Ingrese descripciÃ³n\"\n                className=\"form-control my-2\"\n                ref={\n                    register({required: {value: true, message: 'Descripcion obligatorio'}, minLength: {value:10 , message: 'Descripcion debe tener como minimo 10 caracteres'}})\n                }\n            />\n            <span className=\"text-danger text-small d-block mb-2\">\n                {errors && errors.descripcion && errors.descripcion.message}\n            </span>\n\n            <button className=\"btn btn-primary\">Enviar</button>\n            </form>\n\n        {state.libros.map((item,key) => (\n            <div key={key} >{item.titulo}-{item.descripcion}</div>\n        ))}\n\n        </Fragment>\n\n    );\n}\n\nexport default Formulario;"]},"metadata":{},"sourceType":"module"}